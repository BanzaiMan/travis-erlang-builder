---
language: erlang

env:
  global:
    - KERL_BUILD_BACKEND=git
jobs:
  include:
    - sudo: required
      dist: trusty
      os: linux
      group: edge
      name: trusty
    - sudo: required
      dist: precise
      os: linux
      name: precise
    - sudo: required
      language: generic
      dist: xenial
      os: linux
      group: edge
      name: xenial
    - sudo: required
      language: minimal
      dist: bionic
      os: linux
      group: dev
      name: bionic
    - dist: focal
      language: generic
      os: linux
      group: dev
      name: focal
    - dist: jammy
      language: minimal
      os: linux
      group: dev
      name: jammy
    - sudo: required
      arch: ppc64le
      language: generic
      dist: xenial
      os: linux
      group: edge
      name: xenial-ppc64le
    - sudo: required
      arch: ppc64le
      language: generic
      dist: bionic
      os: linux
      group: edge
      name: bionic-ppc64le
    - sudo: required
      arch: ppc64le
      language: generic
      dist: focal
      os: linux
      group: edge
      name: focal-ppc64le
    - sudo: required
      arch: ppc64le
      language: generic
      dist: jammy
      os: linux
      group: edge
      name: jammy-ppc64le
    - language: minimal
      dist: xenial
      os: linux
      arch: arm64
      name: arm64-xenial
    - language: minimal
      dist: bionic
      os: linux
      arch: arm64
      name: arm64-bionic
    - dist: focal
      language: generic
      os: linux
      group: edge
      arch: arm64
      name: arm64-focal
    - dist: jammy
      language: generic
      os: linux
      group: edge
      arch: arm64
      name: arm64-jammy
    - dist: xenial
      os: linux
      arch: s390x
      name: s390x-xenial
    - dist: bionic
      os: linux
      arch: s390x
      name: s390x-bionic
    - dist: focal
      os: linux
      arch: s390x
      name: s390x-focal
    - dist: jammy
      os: linux
      arch: s390x
      name: s390x-jammy

before_install:
  - export OS_NAME=$(lsb_release -is | tr "A-Z" "a-z" || echo "osx")
  - export RELEASE=$(lsb_release -rs 2>/dev/null || sw_vers -productVersion | sed 's/^\([0-9][0-9]*.[0-9][0-9]*\).*/\1/')
  - export TARGET_DIR=${TRAVIS_BUILD_DIR}/${OS_NAME}/${RELEASE}/$(uname -m)
  - export VERSION=${VERSION:-21.2}
  - mkdir -p ${TARGET_DIR}

install:
  - |
    if ! command -v kerl >&/dev/null; then
      curl -O https://raw.githubusercontent.com/kerl/kerl/master/kerl
      chmod +x kerl
      sudo mv kerl /usr/local/bin/kerl
    fi
    sudo curl -o `which kerl` https://raw.githubusercontent.com/yrashk/kerl/master/kerl

script: ./bin/compile

after_success: ./bin/archive

addons:
  artifacts:
    paths:
      - "${OS_NAME}"
    target_paths:
      - "/binaries/${OS_NAME}/${LSB_RELEASE}/${ARCH}"
